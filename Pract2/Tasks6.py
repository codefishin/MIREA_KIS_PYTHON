import random

# 1 TODO: _dict должен забирать данные из некой таблицы.

_dict = {"1": ["Коллеги,", "В то же время,", "Однако,", "Тем не менее,",
               "Следовательно,", "Соответственно,", "Вместе с тем,", "С другой стороны,"],
         "2": ["парадигма цифровой экономики", "контекст цифровой трансформации",
               "диджитализация бизнес-процессов", "прагматичный подход к цифровым платформам",
               "совокупность сквозных технологий", "программа прорывных исследований",
               "ускорение блокчейн-транзакций", "экспоненциальный рост Big Data"],
         "3": ["открывает новые возможности для", "выдвигает новые требования",
               "несёт в себе риски", "расширяет горизонты", "заставляет искать варианты",
               "не оставляет шанса для", "повышает вероятность", "обостряет проблему"],
         "4": ["дальнейшего углубления", "бюджетного финансирования",
               "синергетического эффекта", "компрометации конфиденциальных",
               "универсальной коммодитизации", "несанкционированной кастомизации",
               "нормативного регулирования", "практического применения"],
         "5": ["знаний и компетенций.", "непроверенных гипотез.", "волатильных активов.",
               "опасных экспериментов.", "государственно-частных партнёрств.",
               "цифровых следов граждан.", "нежелательных последствий.",
               "внезапных открытий."],}


def text_gen_from_dict(length=0, indent_len=0, *, sep=' ', end='\n'):
    """
    Функция генерирует текст из словаря _dict
    Первый параметр указывает количество предложений в абзаце.
    Второй параметр указывает количество абзацев.
    Третий параметр скрыт, является пробелом.
    Четвёртый параметр скрыт, является переносом строки.
    :param length:
    :param indent_len:
    :param sep:
    :param end:
    :return:
    """
    if length < 0 or indent_len < 0:
        raise Exception("Нельзя сгенерировать сообщение при параметре ниже 0 / "
                        "Can't generate a message with a parameter less than 0")

    generated_text = ''
    for _ in range(0, indent_len + 1):
        for __ in range(0, length + 1):
            for value in _dict.values():
                generated_text += value[random.randint(0, 7)] + sep
        generated_text += end
    return generated_text


# TODO: DRIVER


def main():
    print(text_gen_from_dict(-1, 0))


if __name__ == "__main__":
    main()
