def Task1():
    var = [0 for _ in 'abc']  # не запускается при 0xfor _ in 'abc'
    print("Строка кода:\n\n[0xfor _ in 'abc']\n\nСама собой "
          "ничего не представляет, так как не запускается.")
    print("Модификация этой строки:\n\n[0 for _ in 'abc']\n")
    print("Уже запускается.\nОна создаёт список данных и работает следующим образом...")
    print("Сначала код берёт длину строки 'abc' (возвращает 3)")
    print("После заполняет массив каким-то числом/символом. В нашем случае - 0")
    print("_ это переменная для цикла, обычно так называют, когда итерация цикла не важна (т.е. позиция)")
    print("\n...и да, это Python.")
    print(var)


def Task2(*, var='str'): # вот эта звёздочка не даёт вводить аргумент без указания
    var.join('ing')


def Task3():
    a = 1
    b = 1
    c_int = 300000 # проверено в Python 3.11
    c = 300000.0
    d = 300000
    # Я не могу сделать реплику ошибки =)

    # Возможно, тут ошибка в постановке. Если сюда поставить...
    # c = 300000.0, то ошибка сразу появится.
    # Так происходит, потому что c здесь - FLOAT, но d - INT.
    print(a is b, c is d)


def Task4():
    i = 2
    # ['much','code','wow'][i] # 24 символа
    print('mcwuoocdwhe'[i::3])
    # Непонятная ерунда в виде строки это слова
    # much, code, wow сложенные следующим образом:
    # Первый символ каждого слова - MCW
    # Второй символ каждого слова - UOO
    # Третий - CDW
    # Четвёртый - HE (у wow нет символа)


def Task5():
    lst = ['a', 'b', 'c']
    lst += 'd'
    print(lst)
    print('-' * 50)
    print("    lst = lst + 'd'  # Ошибка?!\n"
          "    print(lst)")
    print("\n-- Это не работает, так как оператор + здесь работает следующим образом:")
    print("'Взять lst (тип LIST) и добавить к нему 'd' (тип STRING)'")
    print("Нельзя напрямую сложить STRING и LIST, это две разные переменные")
    print("Оператор += работает примерно как append,"
          "т.е. оно не 'складывает', а вносит данные в LIST,"
          "но делает это при помощи итерации.\n\n")

    print("    lst += 42")
    print("    print(lst)  # Ошибка?!")
    print("\n-- Это не работает из-за того, что 42 - INT, и такое не итерируется")
    print("\n\nGOOD TO KNOW: в списках += вызывает '__iadd__', а + вызывает '__add__'")


def main():
    while 1:
        print('\n', '-' * 50, '\n')
        print("0. Завершить программу")
        print("1. [0xfor _ in 'abc'")
        print("2. Именованные аргументы")
        print("3. Несравнимые переменные")
        print("4. Сокращение кода")
        print("5. Странные ошибки")
        user_input = int(input("Введите любое число из списка.\n"))
        print('\n', '-' * 50, '\n')
        match user_input:
            case 0:
                break
            case 1:
                Task1()
            case 2:
                #Task2("a") # Вызывает ошибку, TypeError
                Task2(var="str_")
            case 3:
                Task3()
            case 4:
                Task4()
            case 5:
                Task5()



if __name__ == "__main__":
    main()
